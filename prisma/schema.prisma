// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model DeviceType {
  id               Int         @id @default(autoincrement())
  CompatibleAddons AddonType[]
  name             String      @unique
  Devices          Device[]
}

model Device {
  id           Int        @id @default(autoincrement())
  Type         DeviceType @relation(fields: [deviceTypeId], references: [id], onDelete: Cascade)
  deviceTypeId Int
  Orders       Order[]
}

model AddonType {
  id               Int        @id @default(autoincrement())
  CompatibleDevice DeviceType @relation(fields: [deviceTypeId], references: [id], onDelete: Cascade)
  name             String     @unique
  Addons           Addon[]
  deviceTypeId     Int
}

model Addon {
  id          Int       @id @default(autoincrement())
  Type        AddonType @relation(fields: [addonTypeId], references: [id], onDelete: Cascade)
  addonTypeId Int
  Orders      Order[]
}

model Order {
  id          Int     @id @default(autoincrement())
  User        User    @relation(fields: [userId], references: [id])
  Device      Device  @relation(fields: [deviceId], references: [id])
  Addons      Addon[]
  isReserved  Boolean @default(true)
  isDelivered Boolean @default(false)
  isReturned  Boolean @default(false)
  userId      Int
  deviceId    Int
}

model User {
  id           Int       @id @default(autoincrement())
  Sessions     Session[]
  Orders       Order[]
  name         String    @unique
  isAdmin      Boolean   @default(false)
  isTeacher    Boolean   @default(false)
  passwordHash String
}

model TeacherRequest {
  id           Int    @id @default(autoincrement())
  name         String @unique
  passwordHash String
}

model Session {
  id     Int      @id @default(autoincrement())
  User   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  key    String   @unique
  expire DateTime
}
